version: '3.8'

services:
  runner:
    image: ghcr.io/kevmo314/docker-gha-runner:main
    container_name: github-runner
    hostname: github-runner-ubuntu
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      # GitHub Configuration
      REPOSITORY: quickstark/demo-fastapi
      ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN}  # Move token to .env file for security
      RUNNER_NAME: gmktec-self-hosted
      RUNNER_WORKDIR: /tmp/runner/work
      RUNNER_GROUP: default
      LABELS: self-hosted,linux,x64,ubuntu,docker,gmktec
      
      # Optional: Runner configuration
      EPHEMERAL: "false"  # Set to true if you want ephemeral runners
      DISABLE_AUTO_UPDATE: "false"
      
    volumes:
      # CRITICAL: Mount Docker socket for Docker-in-Docker capability
      - /var/run/docker.sock:/var/run/docker.sock
      
      # Optional: Mount host Docker config for registry authentication
      - ${HOME}/.docker:/root/.docker:ro
      
      # Optional: Cache directories for better performance
      - runner-cache:/tmp/runner/work
      - runner-tools:/opt/hostedtoolcache
      
      # Mount custom initialization script
      - ./runner-init.sh:/runner-init.sh:ro
      
    # Add user to docker group (GMKTec uses 988)
    group_add:
      - ${DOCKER_GROUP_ID:-988}  # Docker group on GMKTec is 988
    
    # Run initialization script on startup
    entrypoint: |
      sh -c '
        # Install missing tools
        if ! command -v unzip >/dev/null 2>&1; then
          echo "Installing unzip..."
          apt-get update && apt-get install -y unzip curl wget || true
        fi
        # Run the original entrypoint
        exec /entrypoint.sh
      '
    
    # Network configuration
    networks:
      - runner-network
    
    # Health check
    healthcheck:
      test: ["CMD", "pgrep", "-f", "Runner.Listener"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  runner-network:
    driver: bridge

volumes:
  runner-cache:
    driver: local
  runner-tools:
    driver: local
