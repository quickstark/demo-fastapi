# Use a multi-stage build for a smaller final image
FROM python:3.9-slim-bullseye AS builder

# Set the working directory
WORKDIR /app

# Copy only the requirements file first to leverage caching
COPY ./requirements.txt /app/requirements.txt

# Update GPG keys and install dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        gnupg \
        wget && \
    wget --no-check-certificate https://ftp-master.debian.org/keys/archive-key-10.asc && \
    apt-key add archive-key-10.asc && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        g++ \
        libffi-dev \
        libssl-dev \
        curl && \
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
    . $HOME/.cargo/env && \
    rm -rf /var/lib/apt/lists/*  # Clean up apt cache

# Set PATH for cargo (consistent with the .cargo/env)
ENV PATH="/root/.cargo/bin:${PATH}"

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r /app/requirements.txt && \
    pip install --no-cache-dir hypercorn && \
    ln -s /usr/local/bin/hypercorn /usr/bin/hypercorn

# --- Second Stage: Runtime ---
FROM python:3.9-slim-bullseye AS runtime

WORKDIR /app

# Copy only the necessary files from the builder stage
COPY --from=builder /app /app
COPY --from=builder /root/.cargo /root/.cargo

# Set PATH for cargo
ENV PATH="/root/.cargo/bin:${PATH}"

# Copy your application code
COPY . .

# Verify hypercorn is installed and in PATH
RUN which hypercorn

# Set environment variables (Datadog)
ENV PYTHONPATH=/app \
    PORT=8080 \
    DD_ENV="dev" \
    DD_SERVICE="fastapi-app" \
    DD_VERSION="1.0" \
    DD_LOGS_INJECTION=true \
    DD_TRACE_SAMPLE_RATE=1 \
    DD_PROFILING_ENABLED=true \
    DD_AGENT_HOST=datadog-agent \
    DD_AGENT_PORT=8126 \
    DD_DYNAMIC_INSTRUMENTATION_ENABLED=true \
    DD_SYMBOL_DATABASE_UPLOAD_ENABLED=true \
    DD_REMOTE_CONFIGURATION_ENABLED=true \
    DD_SOURCE_CODE_UPLOAD_ENABLED=true

# Use absolute path to hypercorn
CMD ["/usr/local/bin/hypercorn", "main:app", "--bind", "0.0.0.0:${PORT}"]

EXPOSE 8080